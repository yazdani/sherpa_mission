{
	"query": [
 	    {
		"q": "",
		"text": "----- init -----"
	    },
            {
		"q": "register_ros_package(sherpa_cad_models), register_ros_package(knowrob_mongo), register_ros_package(knowrob_cram), mng_db('roslog').",
		"text": "Load register"
	    },
	    {
		"q": "rdf_register_ns(xsens, 'http://knowrob.org/kb/xsens.owl#', [keep(true)]), owl_parse('package://knowrob_srdl/owl/xsens-human.owl'), owl_parse('package://agents_model_description/owl/pointing.owl'), owl_parse('package://agents_model_description/owl/cram_log.owl').",
		"text": "Register namespace and load human skeleton"
	    },
	    {
		"q": "",
	    	"text": ""
	    },
	    {
		"q": "",
		"text": "----- Queries on the cognitive map -----"
	    },
	    {
		"q": "owl_parse('package://world_model_description/owl/semantic_map01.owl').",
	    	"text": "Load the cognitive map"
	    },
	    {
		"q": "owl_individual_of(A, knowrob:'SemanticEnvironmentMap'), !, add_object_with_children(A).",
	    	"text": "Visualize the cognitive map"
	    },
	    {
		"q": "owl_individual_of(ERA, knowrob:'RockAge'), owl_has(ERA, knowrob:'startTime', 'currently'), display_rock_age(ERA, 'currently').",
	    	"text": "Which different rocks do exist, currently?"
	    },
	    {
	    	"text": "Which different rocks do exist in e.g. 1200?"
	    },
	    {
		"q": "owl_individual_of(A, knowrob:'Environment'), highlight_object_mesh(A).",
	    	"text": "Where do many persons walk after the sunset?"
	    },
	    {
		"q": "owl_individual_of(EVENT,knowrob:'LiftingArm'), owl_has(EVENT, knowrob:'startTime', T0), owl_has(EVENT, knowrob:'endTime', T1), add_stickman_visualization(xsens:'XSensHuman1',T0).",
	    	"text": "Show all the several restaurant on this map!"
	    },
	    {
		"q": "owl_individual_of(EVENT,knowrob:'PointingArm'), owl_has(EVENT, knowrob:'startTime', T0), owl_has(EVENT, knowrob:'endTime', T1), add_stickman_visualization(xsens:'XSensHuman1',T0).",
	    	"text": "Show all hazardous areas on this map!"
	    },
	    {
		"q": "owl_individual_of(EVENT,knowrob:'SinkingArm'), owl_has(EVENT, knowrob:'startTime', T0), owl_has(EVENT, knowrob:'endTime', T1), add_stickman_visualization(xsens:'XSensHuman1',T0).",
	    	"text": "Show all the buildings which are affected by the avalanche!"
	    },
	    {
		"q": "mng_db('actiondesig_alpha'), task(T), task_goal(T, '(GO-TO ?LOC ?POINTED-AT)'), task_start(T, S), task_end(T, E), owl_individual_of(CMD, knowrob:'Command'), add_speech_bubble(CMD,[0,0.2,1.7]), add_stickman_visualization(xsens:'XSensHuman1',S) .",
	    	"text": "Show all the passable pathways!"
	    },
	    {
		"q": "findall([Obj, E],((task_end(T,E), task_type(T,knowrob:'CRAMAction'), rdf_has(T, knowrob:'actionResult', Obj))), Objs),!, member([Obj, E], Objs), designator_publish(Obj).",
	    	"text": "How did you interpret this command?"
	    },
	    {
		"q": "owl_individual_of(ACT, knowrob:'GoThere'), owl_has(EVENT, knowrob:'commandExecuted', ACT).",
	    	"text": "How often was the command 'go there' interpreted ?"
	    },
	    {
		"q": "",
	    	"text": ""
	    },
	    {
		"q": "",
	    	"text": "----- Queries on human-specific items -----"
	    },
	    {
		"q": "owl_individual_of(A, knowrob:'Human').",
	    	"text": "List human-related items"
	    },
	    {
		"q": "owl_individual_of(A, knowrob:'Human'), owl_individual_of(A, knowrob:'Alive').",
	    	"text": "Mark the human who could be alive!"
	    },
	    {
		"q": "",
	    	"text": ""
	    },
	    {
		"q": "",
	    	"text": "----- Queries on human pose ----"
	    },
	    {
		"q": "add_human_pose(xsens:'XSensHuman1','1419931675').",
	    	"text": "Load a human pose at a special time"
	    },
	    {
		"q": "",
	    	"text": ""
	    },
	    {
		"q": "",
	    	"text": "----- Queries on the robot's logged belief state -----"
	    },
	    {
		"q": "owl_parse('package://cram_agents_knowledge/srdl/quadrotor.owl').",
	    	"text": "Load quadrotor robot model"
	    }
  ]
}    